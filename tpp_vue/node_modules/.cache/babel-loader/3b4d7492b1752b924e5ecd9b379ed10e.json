{"remainingRequest":"C:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\main.js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\src\\main.js","mtime":1566821651900},{"path":"C:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //Vant 支持一次性导入所有组件，引入所有组件会增加代码包体积，因此不推荐这种做法\n//Vant的导入0\n\nimport Vant from 'vant';\nimport 'vant/lib/index.css';\nVue.use(Vant); //引入第三方的组件库 mint ui\n// 第1步 ：完整引入mint-ui组件库中的所有组件\n\nimport MintUI from 'mint-ui'; // 第2步 ： 单独引入mint-ui组件库中的样式\n\nimport 'mint-ui/lib/style.css'; // 第3步 ： 将mint-ui祖册到vue实例中\n\nVue.use(MintUI); // 第4步 ： 将字体图标引入到当前项目中,引入第三方的iconfont.css\n\nimport './font/font_1285854_comsztiakwk/iconfont.css';\nimport './font/font_ra16fscd53k/iconfont.css'; // 5：引入axios,第三方模块\n\nimport axios from \"axios\"; // 6：配置axios 基础路径\n\naxios.defaults.baseURL = \"http://127.0.0.1:5050/\"; // 7：配置axios 保存session信息\n\naxios.defaults.withCredentials = true; // 8：注册vue 实例中\n//由于axios不支持use 将实例添加vue原型\n\nVue.prototype.axios = axios; //main.js\n//9:引入Vuex第三方模块\n\nimport Vuex from \"vuex\"; //10:注册Vuex\n\nVue.use(Vuex); //11:创建Vuex存储实例对象\n\nvar store = new Vuex.Store({\n  //共享数据\n  state: {\n    toLoginPath: \"/\",\n    //从页面跳转到登录页时，保存跳转前的路径\n    uname: \"\",\n    url: \"http://127.0.0.1:5050/\",\n    cid: 2,\n    //给一个初始id 防止服务器端在没有cid时报错\n    cname: \"\",\n    mid: 2,\n    mname: \"\",\n    city_id: 7,\n    city: \"杭州\",\n    active: \"movie\",\n    activeTwo: \"now\"\n  },\n  //添加修改数据函数\n  mutations: {\n    selectCity: function selectCity(state, cityInfor) {\n      //更换城市\n      state.city_id = cityInfor[0];\n      state.city = cityInfor[1];\n    },\n    changeActive: function changeActive(state, val) {\n      //tabbar点击更换active\n      state.active = val;\n    },\n    changeActiveTwo: function changeActiveTwo(state, val) {\n      //tabbar点击更换activeTwo\n      state.activeTwo = val;\n    },\n    changeMid: function changeMid(state, val) {\n      state.mid = val;\n    },\n    changeMname: function changeMname(state, val) {\n      state.mname = val;\n    },\n    changeCid: function changeCid(state, val) {\n      state.cid = val;\n    },\n    changeCname: function changeCname(state, val) {\n      state.cname = val;\n    },\n    changeUname: function changeUname(state, val) {\n      state.uname = val;\n    },\n    changeToLoginPath: function changeToLoginPath(state, val) {\n      state.toLoginPath = val;\n    } // increment(state){ //购物车数量加1\n    //   state.cartCount++;\n    // },\n    // subItem(state){\n    //   state.cartCount--;\n    // },\n    // clear(state){     //购物车数量清零\n    //   state.cartCount=0;\n    // }\n\n  },\n  //添加获取数据函数\n  getters: {\n    getCity_id: function getCity_id(state) {\n      return state.city_id;\n    },\n    getCity: function getCity(state) {\n      return state.city;\n    },\n    getMid: function getMid(state) {\n      return state.mid;\n    }\n  },\n  //添加异步操作数据函数\n  actions: {\n    //修改数据函数保存mutations clear\n    //异步执行操作\n    //context 上下文对象=>$store对象\n    modifyCount: function modifyCount(context) {\n      //异步等待500毫秒调用clear函数\n      setTimeout(function () {\n        context.commit(\"clear\");\n      }, 500);\n    } // 调用    -执行actions里面函数\n    // this.$store.dispath(' modifyCount ');\n\n  }\n}); //全局组件 header\n// import MyHeader from './components/Header'\n// Vue.component(\"my-header\",MyHeader);\n//全局组件 footer\n// import MyFooter from './components/Footer'\n// Vue.component(\"my-footer\",MyFooter);\n//全局组件 City\n\nimport City from \"./components/City\";\nVue.component(\"my-city\", City);\nimport HeaderNav from \"./components/HeaderNav\";\nVue.component(\"my-header-nav\", HeaderNav);\nVue.config.productionTip = false; // 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; //12:将实例对象添加Vue中\n\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store //!!!!\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","Vant","use","MintUI","axios","defaults","baseURL","withCredentials","prototype","Vuex","store","Store","state","toLoginPath","uname","url","cid","cname","mid","mname","city_id","city","active","activeTwo","mutations","selectCity","cityInfor","changeActive","val","changeActiveTwo","changeMid","changeMname","changeCid","changeCname","changeUname","changeToLoginPath","getters","getCity_id","getCity","getMid","actions","modifyCount","context","setTimeout","commit","City","component","HeaderNav","config","productionTip","render","h","$mount"],"mappings":"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","sourceRoot":"C:\\Users\\web\\Desktop\\tpp\\taopiaopiao\\tpp_vue","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\n//Vant 支持一次性导入所有组件，引入所有组件会增加代码包体积，因此不推荐这种做法\r\n//Vant的导入0\r\nimport Vant from 'vant'\r\nimport 'vant/lib/index.css'\r\nVue.use(Vant);\r\n\r\n//引入第三方的组件库 mint ui\r\n// 第1步 ：完整引入mint-ui组件库中的所有组件\r\nimport MintUI from 'mint-ui'\r\n// 第2步 ： 单独引入mint-ui组件库中的样式\r\nimport 'mint-ui/lib/style.css'\r\n// 第3步 ： 将mint-ui祖册到vue实例中\r\nVue.use(MintUI)\r\n// 第4步 ： 将字体图标引入到当前项目中,引入第三方的iconfont.css\r\nimport  './font/font_1285854_comsztiakwk/iconfont.css'\r\nimport  './font/font_ra16fscd53k/iconfont.css'\r\n\r\n// 5：引入axios,第三方模块\r\nimport axios from \"axios\";\r\n// 6：配置axios 基础路径\r\naxios.defaults.baseURL=\"http://127.0.0.1:5050/\";\r\n// 7：配置axios 保存session信息\r\naxios.defaults.withCredentials=true;\r\n// 8：注册vue 实例中\r\n//由于axios不支持use 将实例添加vue原型\r\nVue.prototype.axios=axios;\r\n//main.js\r\n//9:引入Vuex第三方模块\r\nimport Vuex from \"vuex\";\r\n//10:注册Vuex\r\nVue.use(Vuex);\r\n//11:创建Vuex存储实例对象\r\nvar store = new Vuex.Store({\r\n  //共享数据\r\n  state:{\r\n    toLoginPath:\"/\",   //从页面跳转到登录页时，保存跳转前的路径\r\n    uname:\"\",\r\n    url:\"http://127.0.0.1:5050/\",\r\n    cid:2,  //给一个初始id 防止服务器端在没有cid时报错\r\n    cname:\"\",\r\n    mid:2,\r\n    mname:\"\",\r\n    city_id:7,\r\n    city:\"杭州\",\r\n    active:\"movie\",\r\n    activeTwo:\"now\",\r\n  },   \r\n  //添加修改数据函数\r\n  mutations:{\r\n    selectCity(state,cityInfor){ //更换城市\r\n      state.city_id=cityInfor[0];\r\n      state.city=cityInfor[1];\r\n    },\r\n    changeActive(state,val){     //tabbar点击更换active\r\n      state.active=val;\r\n    },\r\n    changeActiveTwo(state,val){     //tabbar点击更换activeTwo\r\n      state.activeTwo=val;\r\n    },\r\n    changeMid(state,val){\r\n      state.mid=val;\r\n    },\r\n    changeMname(state,val){\r\n      state.mname=val;\r\n    },\r\n    changeCid(state,val){\r\n      state.cid=val;\r\n    },\r\n    changeCname(state,val){\r\n      state.cname=val;\r\n    },\r\n    changeUname(state,val){\r\n      state.uname=val;\r\n    },\r\n    changeToLoginPath(state,val){\r\n      state.toLoginPath=val;\r\n    }\r\n    // increment(state){ //购物车数量加1\r\n    //   state.cartCount++;\r\n    // },\r\n    // subItem(state){\r\n    //   state.cartCount--;\r\n    // },\r\n    // clear(state){     //购物车数量清零\r\n    //   state.cartCount=0;\r\n    // }\r\n  },\r\n  //添加获取数据函数\r\n  getters:{\r\n    getCity_id(state){\r\n      return state.city_id;\r\n    },\r\n    getCity(state){\r\n      return state.city;\r\n    },\r\n    getMid(state){\r\n      return state.mid;\r\n    }\r\n  },\r\n  //添加异步操作数据函数\r\n  actions:{\r\n    //修改数据函数保存mutations clear\r\n    //异步执行操作\r\n    //context 上下文对象=>$store对象\r\n    modifyCount:(context)=>{\r\n      //异步等待500毫秒调用clear函数\r\n      setTimeout(()=>{\r\n        context.commit(\"clear\")\r\n      },500)\r\n    }\r\n    // 调用    -执行actions里面函数\r\n    // this.$store.dispath(' modifyCount ');\r\n  }\r\n});\r\n\r\n\r\n//全局组件 header\r\n// import MyHeader from './components/Header'\r\n// Vue.component(\"my-header\",MyHeader);\r\n//全局组件 footer\r\n// import MyFooter from './components/Footer'\r\n// Vue.component(\"my-footer\",MyFooter);\r\n//全局组件 City\r\nimport City from \"./components/City\"\r\nVue.component(\"my-city\",City);\r\n\r\nimport HeaderNav from \"./components/HeaderNav\"\r\nVue.component(\"my-header-nav\",HeaderNav)\r\n\r\n\r\nVue.config.productionTip = false\r\n\r\n\r\n\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n//12:将实例对象添加Vue中\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  store   //!!!!\r\n}).$mount('#app')\r\n"]}]}